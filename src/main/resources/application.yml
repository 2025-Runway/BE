spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  profiles:
    active: prod

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        database-platform: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true

  jwt:
    secret-key: ${JWT_SECRET_KEY}
    expiration-ms: 86400000

  cloud:
    aws:
      s3:
        bucket: ${BUCKET_NAME}

      stack.auto: false
      region.static: ap-northeast-2
      credentials:
        accessKey: ${S3_ACCESS_KEY}
        secretKey: ${S3_SECRET_KEY}

  kakao:
    auth:
      client: ${KAKAO_REST_API_KEY}
      redirect: ${KAKAO_REDIRECT_URI}


# 기온, 날씨를 받아오기 위한 api url
kma:
  api:
    serviceKey: ${KMA_SERVICE_KEY}
    baseUrl: https://apis.data.go.kr/1360000/VilageFcstInfoService_2.0
    livingWeatherUrl: http://apis.data.go.kr/1360000/LivingWthrIdxServiceV4
    midTermBaseUrl: http://apis.data.go.kr/1360000/MidFcstInfoService



# 미세먼지 받아오기 위한 api url
airkorea:
  api:
    stationUrl: http://apis.data.go.kr/B552584/MsrstnInfoInqireSvc
    dataUrl: http://apis.data.go.kr/B552584/ArpltnInforInqireSvc

# VWorld API (좌표 -> 주소 변환)
vworld:
  api:
    key: ${VWORLD_API_KEY}
    url: http://api.vworld.kr/req/address

gemini:
  api:
    key: ${GEMINI_API_KEY}
    url: "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent"


logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace